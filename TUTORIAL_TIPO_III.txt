
//ITEM MÁGICO


using System;


public class ItemMagico
{
      public string Nome { get; private set; }
      public string Descricao { get; private set; }
      public int Poder { get; private set; }




    public ItemMagico(string nome, string descricao, int poder)
    {
        Nome = nome;
        Descricao = descricao;
        Poder = poder;
    }
}


class Program
{
    static void Main(string[] args)
    {
        // Recebe a entrada do usuário


        string nome = Console.ReadLine();




        string descricao = Console.ReadLine();




        int poder = int.Parse(Console.ReadLine());


        // Cria o item mágico
        ItemMagico item = new ItemMagico(nome, descricao, poder);


        // Imprime o item criado
        Console.WriteLine($"Item: {item.Nome}\nDescrição: {item.Descricao}\nPoder: {item.Poder}");
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////
//EXERCITO DE ROBOS

using System;


public class Robo
{
    private string nome;
    private string modelo;
    private int anoFabricacao;


    public Robo(string nome, string modelo, int anoFabricacao)
    {
        this.nome = nome;
        this.modelo = modelo;
        this.anoFabricacao = anoFabricacao;
    }


    public void ExibirInformacoes()
    {
        Console.WriteLine($"O robô {nome}, modelo {modelo}, foi fabricado em {anoFabricacao}.");
    }
}


class Program
{
    static void Main(string[] args)
    {
        string nome, modelo;
        int ano;


        nome = Console.ReadLine();
        modelo = Console.ReadLine();
        ano = int.Parse(Console.ReadLine());


        Robo robo = new Robo(nome, modelo, ano);
        robo.ExibirInformacoes();
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//DESCUBRA A CARTA



using System;


public enum Naipe { Paus = 0, Ouros = 1, Copas = 2, Espadas = 3 }
public enum Valor { As = 1, Valete = 2, Dama = 3, Rei = 4 }


public class Carta
{
    private Naipe naipe;
    private Valor valor;


    public Carta(Naipe n, Valor v)
    {
        naipe = n;
        valor = v;
    }


    public Naipe GetNaipe()
    {
        return naipe;
    }


    public Valor GetValor()
    {
        return valor;
    }
}


class Program
{
    static void Main(string[] args)
    {
        // Input para escolher a carta desejada
        int valorEscolhido, naipeEscolhido;
        do
        {
            valorEscolhido = int.Parse(Console.ReadLine());
        } while (valorEscolhido < 1 || valorEscolhido > 4);


        do
        {
            naipeEscolhido = int.Parse(Console.ReadLine());
        } while (naipeEscolhido < 0 || naipeEscolhido > 3);


        // Criação da carta escolhida pelo usuário
        Carta cartaEscolhida = new Carta((Naipe)naipeEscolhido, (Valor)valorEscolhido);


        // Exibição da carta escolhida pelo usuário
        string nomeValor = "", nomeNaipe = "";


        switch (cartaEscolhida.GetValor())
        {
            case Valor.As:
                nomeValor = "Ás";
                break;
            case Valor.Valete:
                nomeValor = "Valete";
                break;
            case Valor.Dama:
                nomeValor = "Dama";
                break;
            case Valor.Rei:
                nomeValor = "Rei";
                break;
        }


        switch (cartaEscolhida.GetNaipe())
        {
            case Naipe.Paus:
                nomeNaipe = "Paus";
                break;
            case Naipe.Ouros:
                nomeNaipe = "Ouros";
                break;
            case Naipe.Copas:
                nomeNaipe = "Copas";
                break;
            case Naipe.Espadas:
                nomeNaipe = "Espadas";
                break;
        }


        Console.WriteLine($"Carta escolhida: {nomeValor} de {nomeNaipe}");
    }
}



